name: MLOps workflow
on: push
jobs:
  configure-workflow:
    name: 'Configure Workflow'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 100
      - uses: marceloprado/has-changed-path@v1
        id: stage1-has-changed
        with:
          paths: pipeline/stage1_ingest
      - uses: marceloprado/has-changed-path@v1
        id: stage2-has-changed
        with:
          paths: pipeline/stage2_clean
      - uses: marceloprado/has-changed-path@v1
        id: stage3-has-changed
        with:
          paths: pipeline/stage3_model
      - uses: marceloprado/has-changed-path@v1
        id: stage4-has-changed
        with:
          paths: pipeline/stage4_test
      - uses: marceloprado/has-changed-path@v1
        id: stage5-has-changed
        with:
          paths: pipeline/stage5_deploy
      - uses: marceloprado/has-changed-path@v1
        id: code-has-changed
        with:
          paths: pipeline
    outputs:
      build-stage-1: ${{ steps.stage1-has-changed.outputs.changed }}
      build-stage-2: ${{ steps.stage2-has-changed.outputs.changed }}
      build-stage-3: ${{ steps.stage3-has-changed.outputs.changed }}
      build-stage-4: ${{ steps.stage4-has-changed.outputs.changed }}
      build-stage-5: ${{ steps.stage5-has-changed.outputs.changed }}
      upload-artifacts: ${{ steps.code-has-changed.outputs.changed }}
      run-stage-1: ${{ steps.stage1-has-changed.outputs.changed }}
      run-stage-2: ${{ steps.stage1-has-changed.outputs.changed || steps.stage2-has-changed.outputs.changed }}
  build-stage-1:
    name: 'Build Stage 1: Ingest'
    needs: configure-workflow
    runs-on: ubuntu-latest
    steps:
      - if: ${{ needs.configure-workflow.outputs.build-stage-1 == 'true' }}  
        uses: actions/checkout@v2
      - if: ${{ needs.configure-workflow.outputs.build-stage-1 == 'true' }}  
        uses: ./.github/actions/build-ingest
      - if: ${{ needs.configure-workflow.outputs.build-stage-1 == 'true' }}  
        uses: actions/upload-artifact@v2
        with:
          name: stage1_ingest
          path: stage1_ingest.zip
  build-stage-2:
    name: 'Build Stage 2: Clean'
    needs: configure-workflow
    runs-on: ubuntu-latest
    steps:
      - if: ${{ needs.configure-workflow.outputs.build-stage-2 == 'true' }}
        uses: actions/checkout@v2
      - if: ${{ needs.configure-workflow.outputs.build-stage-2 == 'true' }}
        uses: ./.github/actions/build-clean
      - if: ${{ needs.configure-workflow.outputs.build-stage-2 == 'true' }}
        uses: actions/upload-artifact@v2
        with:
          name: stage2_clean
          path: stage2_clean.zip
  build-stage-3:
    name: 'Build Stage 3: Model'
    needs: configure-workflow
    runs-on: ubuntu-latest
    steps:
      - if: ${{ needs.configure-workflow.outputs.build-stage-3 == 'true' }}
        uses: actions/checkout@v2
      - if: ${{ needs.configure-workflow.outputs.build-stage-3 == 'true' }}
        uses: ./.github/actions/build-model
      - if: ${{ needs.configure-workflow.outputs.build-stage-3 == 'true' }}
        uses: actions/upload-artifact@v2
        with:
          name: stage3_model
          path: artifacts/*
  build-stage-4:
    name: 'Build Stage 4: Test'
    needs: configure-workflow
    runs-on: ubuntu-latest
    steps:
      - if: ${{ needs.configure-workflow.outputs.build-stage-4 == 'true' }}
        uses: actions/checkout@v2
      - if: ${{ needs.configure-workflow.outputs.build-stage-4 == 'true' }}
        uses: ./.github/actions/build-test
      - if: ${{ needs.configure-workflow.outputs.build-stage-4 == 'true' }}
        uses: actions/upload-artifact@v2
        with:
          name: stage4_test
          path: stage4_test.zip
  build-stage-5:
    name: 'Build Stage 5: Deploy'
    needs: configure-workflow
    runs-on: ubuntu-latest
    steps:
      - if: ${{ needs.configure-workflow.outputs.build-stage-5 == 'true' }}
        uses: actions/checkout@v2
      - if: ${{ needs.configure-workflow.outputs.build-stage-5 == 'true' }}
        uses: ./.github/actions/build-deploy
      - if: ${{ needs.configure-workflow.outputs.build-stage-5 == 'true' }}
        uses: actions/upload-artifact@v2
        with:
          name: stage5_deploy
          path: stage5_deploy.zip
  upload-artifacts:
    needs: [configure-workflow, build-ingest, build-clean, build-model, build-test, build-deploy]
    name: 'Upload Build Artifacts to S3'
    runs-on: ubuntu-latest
    steps:
      - if: ${{ needs.configure-workflow.outputs.upload-artifacts == 'true' }}
        uses: actions/checkout@v2
      - if: ${{ needs.configure-workflow.outputs.upload-artifacts == 'true' }}
        uses: actions/download-artifact@v2
      - if: ${{ needs.configure-workflow.outputs.upload-artifacts == 'true' }}
        name: Upload Build Artifacts to S3
        run: |
          ./.github/scripts/collect-build-artifacts.sh
          (cd artifacts; ../.github/scripts/hash-zips.sh)
          aws s3 sync artifacts/ s3://${{ secrets.AWS_S3_BUCKET }}
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  terraform-plan:
    name: 'Terraform Plan'
    needs: upload-artifacts
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: hashicorp/setup-terraform@v1
      - working-directory: ./infra
        name: Terraform Plan
        run: |
          terraform init
          terraform plan
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  terraform-apply:
    environment: Production
    name: 'Terraform Apply'
    needs: terraform-plan
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: hashicorp/setup-terraform@v1
      - working-directory: ./infra
        name: Terraform Apply
        run: |
          terraform init
          terraform apply -auto-approve
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
